// Generated by CoffeeScript 1.6.1
(function() {

  (function($, window) {
    'use strict';    $.fn.plugin = function(options) {
      return this.each(function() {
        var $nav, $window, $withUl, resetMenu, resizer, selector, settings, showMenu, timer;
        settings = $.extend({}, $.fn.plugin["default"], options);
        $window = $(window);
        $nav = $(this);
        timer = void 0;
        if (settings.transitionOpacity) {
          $nav.addClass('opacity');
        }
        $nav.find('li').each(function() {
          var $this;
          $this = $(this);
          if ($this.has('ul').length) {
            return $this.addClass('item-with-ul').find('ul').hide();
          }
        });
        $withUl = $('.item-with-ul');
        showMenu = function() {
          var $this;
          $this = $(this);
          if ($nav.hasClass('lg-screen')) {
            if (settings.transitionOpacity) {
              return $this.find('>ul').addClass('show').stop(true, true).animate({
                height: ['toggle', 'swing'],
                opacity: 'toggle'
              }, settings.animationSpeed);
            } else {
              return $this.find('>ul').addClass('show').stop(true, true).animate({
                height: ['toggle', 'swing']
              }, settings.animationSpeed);
            }
          }
        };
        resetMenu = function() {
          var $this;
          $this = $(this);
          if ($nav.hasClass('lg-screen') && $this.find('ul').hasClass('show')) {
            if (settings.transitionOpacity) {
              return $this.find('>ul').removeClass('show').stop(true, true).animate({
                height: ['toggle', 'swing'],
                opacity: 'toggle'
              }, settings.animationSpeed);
            } else {
              return $this.find('>ul').removeClass('show').stop(true, true).animate({
                height: ['toggle', 'swing']
              }, settings.animationSpeed);
            }
          }
        };
        resizer = function() {
          if ($window.width() <= settings.breakpoint) {
            return $nav.removeClass('lg-screen').addClass('sm-screen');
          } else if ($window.width() > settings.breakpoint) {
            $nav.removeClass('sm-screen').addClass('lg-screen');
            $nav.removeClass('show');
            if (settings.hoverIntent) {
              return $withUl.hoverIntent({
                over: showMenu,
                out: resetMenu,
                timeout: settings.hoverIntentTimeout
              });
            } else {
              return $withUl.hover(showMenu, resetMenu);
            }
          }
        };
        selector = '.item-with-ul, ' + settings.buttonSelector;
        $(selector).append('<span clas="touch-button"><i class="navicon">TB</i></span>');
        selector = settings.buttonSelector + ', ' + settings.buttonSelector + ' .touch-button';
        $(selector).on('touchstart click', function(e) {
          var bs;
          e.preventDefault();
          e.stopPropagation();
          bs = settings.buttonSelector;
          return $btnParent;
        });
        resizer();
        return $window.resize(function() {
          clearTimeout(timer);
          return timer = setTimeout(resizer, 200);
        });
      });
    };
    return $.fn.plugin["default"] = {
      'breakpoint': 800,
      'animationSpeed': 250,
      'transitionOpacity': false,
      'buttonSelector': '.menu-button',
      'hoverIntent': false,
      'hoverIntentTimeout': 150
    };
  })(jQuery, window);

}).call(this);
